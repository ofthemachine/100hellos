name: "Build, Run, and Publish Docker Images"
description: "Publish to dockerhub with multiplatform support"

inputs:
  display-as:
    description: "The name to display in the workflow run"
    required: true
  dockerhub-username:
    description: "The dockerhub username to authenticate with and push the image to"
    required: false
    default: "100hellos"
  dockerhub-token:
    description: "The dockerhub token to authenticate with and push the image to"
    required: false
    default: ""
  dockerhub-description:
    description: "The dockerhub description to update the image with"
    required: false
    default: ""
  dockerhub-readme:
    description: "The dockerhub readme to update dockerhub page with"
    required: false
    default: ""
  dockerfile:
    description: "The dockerfile to build"
    required: false
    default: "Dockerfile.composite"
  docker-build-target:
    description: "The docker build target to build"
    required: true
  docker-build-args:
    description: "The docker build args to build the image with"
    required: false
    default: ""
  docker-image:
    description: "The docker image to build, no tags"
    required: true
  docker-context:
    description: "The docker context to build the image in"
    required: false
    default: "."
  docker-label-prefix:
    description: "The docker label prefix to add to the image"
    required: false
    default: ""
  platforms:
    description: "The platforms to build the image for"
    required: true
  test:
    description: "Whether to run tests"
    required: false
    default: "true"
  publish:
    description: "Whether to publish images"
    required: false
    default: "false"
  publish-dockerhub-description:
    description: "Whether to update the dockerhub description. Requires publish to be true to matter."
    required: false
    default: "true"
runs:
  using: "composite"
  steps:
    # https://github.com/docker/login-action
    -
      name: 🗝 Log into Dockerhub
      if: ${{ inputs.publish == 'true' }}
      id: login
      uses: docker/login-action@v3
      with:
        username:  ${{ inputs.dockerhub-username }}
        password:  ${{ inputs.dockerhub-token }}

    # Add support for more platforms with QEMU (optional)
    # https://github.com/docker/setup-qemu-action
    # This is an architecture emulator that claims to provide near-native speeds for multi-arch builds, however
    # build rails for arm64 on an amd64 machine timed out after 6 hours -- so I'm not convinced I believe that claim.
    -
      name: 🛠 Set up QEMU
      uses: docker/setup-qemu-action@v3
      with:
        image: mirror.gcr.io/tonistiigi/binfmt:latest
        platforms: ${{ inputs.platforms }}

    -
      name: 🛠 Set up Docker Buildx
      uses: docker/setup-buildx-action@v3
      with:
        platforms: ${{ inputs.platforms }}

    # https://github.com/docker/build-push-action
    -
      name: 🔨 + 🔄 - ${{ inputs.display-as }} (${{ inputs.platforms }})
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.docker-context }}
        file: ${{ inputs.dockerfile }}
        target: ${{ inputs.docker-build-target }}
        platforms: ${{ inputs.platforms }}
        build-args: ${{ inputs.docker-build-args }}
        load: true
        tags: ${{ inputs.docker-image }}:local
        cache-to: |
          type=gha,mode=max
        cache-from: |
          type=gha,mode=max
          type=registry,ref=${{ inputs.docker-image }}:${{ inputs.docker-label-prefix }}latest,mode=max

    -
      name: 🏃 Run ${{ inputs.display-as }}
      if: ${{ inputs.test == 'true' }}
      continue-on-error: false
      shell: bash
      run: |
        docker run --rm ${{ inputs.docker-image }}:local

    # https://github.com/docker/metadata-action
    -
      name: 🐳 Generate Image Metadata
      if: ${{ inputs.publish == 'true' }}
      id: meta
      uses: docker/metadata-action@v5
      with:
        images: |
          ${{ inputs.docker-image }}
        tags: |
          # On main: push `[:lang directory:]:latest.
          # On schedule: push `[:lang directory:]:YYYYMMDD`.
          # Always: push `[:lang directory:]:edge`.
          # On tag: push `[:lang directory:]:[:tag]`.
          # Always: push `[:lang directory:]:[:short_sha (7 chars)]`.

          # Because of inconsistent behaviours with the use of flavour and between
          # tag types, we explicilty set it across all tags.
          prefix=${{ inputs.docker-label-prefix }},type=raw,value=latest,priority=1000,enable={{is_default_branch}}
          prefix=${{ inputs.docker-label-prefix }},type=schedule,pattern={{date 'YYYYMMDD'}}
          prefix=${{ inputs.docker-label-prefix }},type=raw,value=edge,priority=700
          prefix=${{ inputs.docker-label-prefix }},type=ref,enable=true,priority=600,event=tag
          prefix=${{ inputs.docker-label-prefix }},type=sha,enable=true,priority=100,format=short

    # https://github.com/docker/build-push-action
    # Note this only uses GHA caches as they should we warm from the previous step.
    # This helps with 429 rate limiting errors from Docker Hub.
    -
      name: 🚀 ${{ inputs.display-as }} (${{ inputs.platforms }})
      if: ${{ inputs.publish == 'true' }}
      uses: docker/build-push-action@v6
      with:
        context: ${{ inputs.docker-context }}
        file: ${{ inputs.dockerfile }}
        target: ${{ inputs.docker-build-target }}
        platforms: ${{ inputs.platforms }}
        build-args: ${{ inputs.docker-build-args }}
        push: true
        tags: ${{ steps.meta.outputs.tags }}
        cache-to: |
          type=gha,mode=max
        cache-from: |
          type=gha,mode=max

    -
      name: 🖋 Docker Hub
      uses: peter-evans/dockerhub-description@432a30c9e07499fd01da9f8a49f0faf9e0ca5b77
      # Check if the repo has a README.md for publication, and if so update the
      # description on Docker Hub.
      if: ${{ inputs.publish == 'true' && inputs.publish-dockerhub-description == 'true' }}
      with:
        username: ${{ inputs.dockerhub-username }}
        password: ${{ inputs.dockerhub-token }}
        repository: ${{ inputs.docker-image }}
        short-description: ${{ inputs.dockerhub-description }}
        readme-filepath: ${{ inputs.dockerhub-readme }}
